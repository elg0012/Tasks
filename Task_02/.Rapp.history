totalNap <- tapply(beren4$sleepTime[Naps], beren4$age[Naps], sum)
totalNap
par(las=1, mar=c(5,5,1,1), mgp=c(2, 0.5, 0), tck=-0.01)
plot(as.numeric(names(totalNap)), totalNap, type="b", pch=16, xlab="age in days", ylab="total nap time (in minutes)"
avgNap <- tapply(beten4$value[Nap], beren4$age[Nap], mean)totalNap
avgNap <- tapply(beten4$value[Nap], beren4$age[Nap], mean)
avgNaps <- tapply(beten4$value[Naps], beren4$age[Naps], mean)
avgNaps <- tapply(beren4$value[Naps], beren4$age[Naps], mean)
varNaps <- tapply(beren4$value[Naps], beren4$age[Naps], var)
totalNaps <- tapply(beren4$sleepTime[Naps], beren4$age[Naps], sum)
totalNaps
par(las=1, mar=c(5,5,1,1), mgp=c(2, 0.5, 0), tck=-0.01)
plot(as.numeric(names(totalNap)), totalNap, type="b", pch=16, xlab="age in days", ylab="total nap time (in minutes)"
avgNaps <- tapply(beren4$value[Naps], beren4$age[Naps], mean)#
varNaps <- tapply(beren4$value[Naps], beren4$age[Naps], var)#
totalNaps <- tapply(beren4$value[Naps], beren4$age[Naps], sum)#
numNaps <- tapply(beren4$value[Naps], beren4$ageNaps[, sum])
avgNaps <- tapply(beren4$value[Naps], beren4$age[Naps], mean)#
varNaps <- tapply(beren4$value[Naps], beren4$age[Naps], var)#
totalNaps <- tapply(beren4$value[Naps], beren4$age[Naps], sum)#
numNaps <- tapply(beren4$value[Naps], beren4$age[Naps], length])
avgNaps <- tapply(beren4$value[Naps], beren4$age[Naps], mean)#
varNaps <- tapply(beren4$value[Naps], beren4$age[Naps], var)#
totalNaps <- tapply(beren4$value[Naps], beren4$age[Naps], sum)#
numNaps <- tapply(beren4$value[Naps], beren4$age[Naps], length)
totalNaps
avgNaps <- tapply(beren4$value[Naps], beren4$age[Naps], mean)#
varNaps <- tapply(beren4$value[Naps], beren4$age[Naps], var)#
totalNaps <- tapply(beren4$value[Naps], beren4$age[Naps], sum)#
numNaps <- tapply(beren4$value[Naps], beren4$age[Naps], length)
cor(beren4$value[Naps], beren4$age[Naps])#
cor.test(beren4$value[Naps], beren4$age[Naps])
Naps <- which(Data[, 9] == 'nap')
beren4 <- beren3[order(beren2$age),]
startHour <- (beren4$start_hour)
startHour <- (beren4$start_hour)#
startMin <- (beren4$start_minute)#
endHour <- (beren4$end_hour)#
endMin <- (beren4$end_minute)
startHour
startMin
endHour
endMin
beren4$sleepTime <- ((endHour - startHour)*60) + (endMin - startMin)
beren4
avgNaps <- tapply(beren4$value[Naps], beren4$age[Naps], mean)#
varNaps <- tapply(beren4$value[Naps], beren4$age[Naps], var)#
totalNaps <- tapply(beren4$value[Naps], beren4$age[Naps], sum)#
numNaps <- tapply(beren4$value[Naps], beren4$age[Naps], length)
cor(beren4$value[Naps], beren4$age[Naps])
cor.test(beren4$value[Naps], beren4$age[Naps])
par(las=1, mar=c(5,5,1,1), mgp=c(2, 0.5, 0), tck=-0.01)
plot(as.numeric(names(totalNap)), totalNap, type="b", pch=16, xlab="age in days", ylab="total nap time (in minutes)"
Naps <- which(Data[, 9] == 'nap')#
beren4 <- beren3[order(beren2$age),]#
startHour <- (beren4$start_hour)#
startMin <- (beren4$start_minute)#
endHour <- (beren4$end_hour)#
endMin <- (beren4$end_minute)#
startHour#
startMin#
endHour#
endMin#
beren4$sleepTime <- ((endHour - startHour)*60) + (endMin - startMin)#
beren4#
avgNaps <- tapply(beren4$value[Naps], beren4$age[Naps], mean)#
varNaps <- tapply(beren4$value[Naps], beren4$age[Naps], var)#
totalNaps <- tapply(beren4$value[Naps], beren4$age[Naps], sum)#
numNaps <- tapply(beren4$value[Naps], beren4$age[Naps], length)
plot(as.numeric(names(totalNap)), totalNap, type="b", pch=16, xlab="age in days", ylab="total nap time (in minutes)"
par(las=1, mar=c(5,5,1,1), mgp=c(2, 0.5, 0), tck=-0.01)
par(las=1, mar=c(5,5,1,1), mgp=c(2, 0.5, 0), tck=-0.01)#
plot(as.numeric(names(totalNap)), totalNap, type="b", pch=16, xlab="age in days", ylab="total nap time (in minutes)"#
cor.test(beren4$start_hour, beren4$sleepTime)
beren4
avgNaps <- tapply(beren4$value[Naps], beren4$age[Naps], mean)#
varNaps <- tapply(beren4$value[Naps], beren4$age[Naps], var)#
totalNaps <- tapply(beren4$value[Naps], beren4$age[Naps], sum)#
numNaps <- tapply(beren4$value[Naps], beren4$age[Naps], length)
totalNaps
beren4$sleepTime <- ((endHour - startHour)*60) + (endMin - startMin)
beren4
sum(beren4 'Naps')
beren4
avgNaps <- tapply(beren4$value[Naps], beren4$age[Naps], mean)#
varNaps <- tapply(beren4$value[Naps], beren4$age[Naps], var)#
totalNaps <- tapply(beren4$value[Naps], beren4$age[Naps], sum)#
numNaps <- tapply(beren4$value[Naps], beren4$age[Naps], length)
totalNaps
numNaps
totalNaps <- tapply(beren4$value[Naps], beren4$age[Naps], sum)#
numNaps <- tapply(beren4$value[Naps], beren4$age[Naps], length)
plot(as.numeric(names(totalNap)), totalNap, type="b", pch=16, xlab="age in days", ylab="total nap time (in minutes)"
beren4 <- beren3[order(beren2$age),]#
startHour <- (beren4$start_hour)
Naps <- which(Data[, 9] == 'nap')
beren4 <- beren3[Naps,]
startHour <- (beren4$start_hour)#
startMin <- (beren4$start_minute)#
endHour <- (beren4$end_hour)#
endMin <- (beren4$end_minute)
startHour#
startMin#
endHour#
endMin
beren4$sleepTime <- ((endHour - startHour)*60) + (endMin - startMin)#
beren4
totalNaps <- tapply(beren4$value[Naps], beren4$age[Naps], sum)
totalNaps
par(las=1, mar=c(5,5,1,1), mgp=c(2, 0.5, 0), tck=-0.01)
plot(as.numeric(names(totalNap)), totalNap, type="b", pch=16, xlab="age in days", ylab="total nap time (in minutes)"
cor.test(beren4$start_hour, beren4$sleepTime)
setwd('~/Desktop/Evolution/Tasks/Task_02')#
Data <- read.csv('http://jonsmitchell.com/data/beren.csv',stringsAsFactors=F)#
write.csv(Data, 'rawdata.csv', quote=F)#
Data#
length(Data)#
nrow(Data)#
ncol(Data)#
colnames(Data)
head(Data)
Data[1,]#
Data[2,]#
Data[1:3,]#
Data[1:3, 4]#
Data[1:5, 1:3]
Feeds <- which(Data[,9] == 'bottle')#
berenMilk <- Data[Feeds,]#
head(berenMilk)
Feeds <- which(Data[,'event'] == 'bottle')#
Feeds <- which(Data$event == 'bottle')
dayID <- apply(Data, 1, function(x) paste(x[1:3], collapse='-'))#
dateID <- sapply(dayID, as.Date, format = "%Y-%m-%d" , origin = "2019-04-18")#
Data$age <- dateID[which(Data$event == 'birth')]#
head(Data)#
beren2 <- Data#
beren3 <- beren2[order(beren2$age) ,]#
head(beren)#
head(beren2)#
head(beren3)#
write.csv(beren3, 'beren_new.csv', quote=F, row.names=FALSE)
Feeds <- which(beren3$event == "bottle")#
avgMilk <- mean (beren3$value[Feeds])#
head(avgMilk)
avgFeed <- tapply(beten3$value[Feeds], beren3$age[Feeds], mean)#
varFeed <- tapply(beren3$value[Feeds], beren3$age[Feeds], var)#
totalFeed <- tapply(beren3$value[Feeds], beren3$age[Feeds], sum)#
numFeeds <- tapply(beren3$value[Feeds], beren3$age[Feeds], length)
avgFeed <- tapply(beren3$value[Feeds], beren3$age[Feeds], mean)#
varFeed <- tapply(beren3$value[Feeds], beren3$age[Feeds], var)#
totalFeed <- tapply(beren3$value[Feeds], beren3$age[Feeds], sum)#
numFeeds <- tapply(beren3$value[Feeds], beren3$age[Feeds], length)
cor(beren3$value[Feeds], beren3$age[Feeds])#
cor.test(beren3$value[Feeds], beren3$age[Feeds])#
berenCor <- cor.test(beren3$value[Feeds], beren3$age[Feeds])#
summary(berenCor)
berenANOVA <- aov(beren3$value[Feeds] ~ beren3$caregiver[Feeds])#
boxplot(beren3$value[Feeds] ~ beren3$caregiver[Feeds], xlab = "who gave the bottle", ylab = "amount of milk consumed (oz)")
par(las=1, mar=c(5,5,1,1), mgp=c(2, 0.5, 0), tck=-0.01)#
plot(as.numeric(names(totalFeed)), totalFeed, type="b", pch=16, xlab="age in days", ylab="ounces of milk")#
abline(h=mean(totalFeed), lty=2, col='red')#
pdf("r02b-totalMilkByDay.pdf", height = 4, width = 4)#
par(las=1, mar=c(5,5,1,1), mgp=c(2, 0.5, 0), tck=-0.01)#
plot(as.numeric(names(totalFeed)), totalFeed, type="b", pch=16, xlab="age in days", ylab="ounces of milk")#
abline(h=mean(totalFeed), lty=2, col='red')#
dev.off()
Naps <- which(Data[,9] == 'nap')
beren4 <- beren3[Naps,]
beren4
startHour <- (beren4$start_hour)
startMin <- (beren4$start_min)
endHour <- (beren4$end_hour)#
endMin <- (beren4$end_minute)
startHour
startMin
endHour
endMin
sleepTime <- ((stopHour - startHour)*60) + (stopMin - startMin)
sleepTime <- ((endHour - startHour)*60) + (endMin - startMin)
sleepTime
totalNap <- tapply(beren4$sleepTime, beren4$age, sum)
totalNap <- (beren4$sleepTime + beren4$age)
totalNap
par(las=1, mar=c(5,5,1,1), mgp=c(2, 0.5, 0), tck=-0.01)
plot(as.numeric(names(totalNap)), totalNap, type="b", pch=16, xlab="age in days", ylab="nap time in minutes")
cor.test(beren4$start_hour, beren4$sleepTime)
Nap <- which(Data[,9] == 'nap')
Nap <- which(Data[,9] == 'nap')#
Naps <-  Data [Bonus,]#
Naps
Nap <- which(Data[,9] == 'nap')#
Naps <-  Data [Nap,]#
Naps
Nap <- which(Data[,'event'] == 'nap')
Nap <- which (Data$event == 'nap')
beren4 <- which(Data[,9] == 'nap')
Naps <-  Data [Nap,]
Naps
beren4
Naps <- which(Data[,9] == 'nap')
beren4 <- Data[Naps,]
beren4
startHour <- (beren4$start_hour)#
startMin <- (beren4$start_minute)#
endHour <- (beren4$end_hour)#
endMin <- beren4$end_minute)
startHour <- (beren4$start_hour)#
startMin <- (beren4$start_minute)#
endHour <- (beren4$end_hour)#
endMin <- (beren4$end_minute)
totalNapTime <- ((endHour - start hour)*60) + (endMin - startMin)
totalNap <- ((endHour - start hour)*60) + (endMin - startMin)
beren4$sleepTime <- ((endHour - start hour)*60) + (endMin - startMin)
beren4$sleepTime <- ((endHour - start hour)*(60)) + (endMin - startMin)
en4$sleepTime <- (endHour - start hour)*(60) + (endMin - startMin)
beren4$sleepTime <- (endHour - start hour)*(60) + (endMin - startMin)
sleepTime <- (endHour - start hour)*(60) + (endMin - startMin)
sleepTime <- (endHour - starthour)*(60) + (endMin - startMin)
sleepTime <- (endHour - startHour)*(60) + (endMin - startMin)
sleepTime
sleepTime1 <- (endHour - startHour)*(60) #
sleepTime2 <- (endMin - startMin)
sleepTime1
sleepTime2
sum(sleepTime1, sleepTime2)
totalTime <- tapplu(sleepTime1, sleepTime2, sum)
totalTime <- tapply(sleepTime1, sleepTime2, sum)
totalTime
par(las=1, mar=c(5,5,1,1), mgp=c(2, 0.5, 0), tck=-0.01)
plot(as.numeric(names(totalTime)), totalTime, type="b", pch=16, xlab="age in days", ylab="nap times in minutes")
cor.test(beren4$start_hour, beren4$totalTime)
cor.test(beren4$start_minute, beren4$totalTime)
cor.test(beren4$start_hour, beren4$totalTime)
cor(beren4$start_hour, beren4$totalTime)
cor.test(beren4$start_hour, beren4$totalTime)
startTime <- ((start_hour)*60) + start_minute
startTime <- ((startHour)*60) + startMin
startTime
cor.test(startTime, totalTime)
totalTime
startTime
cor.test(startMin, totalTime)
cor.test(startHour, totalTime)
cor.test(startTime, totalTime)
setwd('~/Desktop/Evolution/Tasks/Task_02')#
Data <- read.csv('http://jonsmitchell.com/data/beren.csv',stringsAsFactors=F)#
write.csv(Data, 'rawdata.csv', quote=F)#
Data#
length(Data)#
nrow(Data)#
ncol(Data)#
colnames(Data)
head(Data)
Data[1,]#
Data[2,]#
Data[1:3,]#
Data[1:3, 4]#
Data[1:5, 1:3]#
#Data[257, 1:3]#
Feeds <- which(Data[,9] == 'bottle')#
berenMilk <- Data[Feeds,]#
head(berenMilk)
Feeds <- which(Data[,'event'] == 'bottle')#
Feeds <- which(Data$event == 'bottle')
dayID <- apply(Data, 1, function(x) paste(x[1:3], collapse='-'))#
dateID <- sapply(dayID, as.Date, format = "%Y-%m-%d" , origin = "2019-04-18")#
Data$age <- dateID[which(Data$event == 'birth')]#
head(Data)#
beren2 <- Data#
beren3 <- beren2[order(beren2$age) ,]#
head(beren)#
head(beren2)#
head(beren3)#
write.csv(beren3, 'beren_new.csv', quote=F, row.names=FALSE)
Feeds <- which(beren3$event == "bottle")#
avgMilk <- mean (beren3$value[Feeds])#
head(avgMilk)
avgFeed <- tapply(beren3$value[Feeds], beren3$age[Feeds], mean)#
varFeed <- tapply(beren3$value[Feeds], beren3$age[Feeds], var)#
totalFeed <- tapply(beren3$value[Feeds], beren3$age[Feeds], sum)#
numFeeds <- tapply(beren3$value[Feeds], beren3$age[Feeds], length)
cor(beren3$value[Feeds], beren3$age[Feeds])#
cor.test(beren3$value[Feeds], beren3$age[Feeds])#
berenCor <- cor.test(beren3$value[Feeds], beren3$age[Feeds])#
summary(berenCor)#
berenANOVA <- aov(beren3$value[Feeds] ~ beren3$caregiver[Feeds])#
boxplot(beren3$value[Feeds] ~ beren3$caregiver[Feeds], xlab = "who gave the bottle", ylab = "amount of milk consumed (oz)")
par(las=1, mar=c(5,5,1,1), mgp=c(2, 0.5, 0), tck=-0.01)#
plot(as.numeric(names(totalFeed)), totalFeed, type="b", pch=16, xlab="age in days", ylab="ounces of milk")#
abline(h=mean(totalFeed), lty=2, col='red')#
pdf("r02b-totalMilkByDay.pdf", height = 4, width = 4)#
par(las=1, mar=c(5,5,1,1), mgp=c(2, 0.5, 0), tck=-0.01)#
plot(as.numeric(names(totalFeed)), totalFeed, type="b", pch=16, xlab="age in days", ylab="ounces of milk")#
abline(h=mean(totalFeed), lty=2, col='red')#
dev.off()
Naps <- which(Data[,9] == 'nap')
beren4 <- Data[Naps,]
beren4
startHour <- (beren4$start_hour)
startMin <- (beren4$start_minute)
endHour <- (beren4$end_hour)
endMin <- (beren4$end_minute)
sleepTime1 <- (endHour - startHour)*(60)
sleepTime2 <- (endMin - startMin)
sleepTime1
sleepTime2
totalTime <- tapply(sleepTime1, sleepTime2, sum)
totalTime
par(las=1, mar=c(5,5,1,1), mgp=c(2, 0.5, 0), tck=-0.01)
plot(as.numeric(names(totalTime)), totalTime, type="b", pch=16, xlab="age in days", ylab="nap times in minutes")
plot(as.numeric(names(totalTime)), totalTime, type="b", pch=16, xlab="age in days", ylab="nap time in minutes")
startTime
startTime <- ((startHour)*60) + startMin
startTime
cor.test(startTime, totalTime)
totalDuration <- (totalTime - startTime)
cor.test(startHour, totalTime)
cor.test(startTime, totalTime)
napTime <- [10:4,5,6,7]
napTime <- c(10:4,5,6,7)
napTime
sum(napTime)
cor.test(startTime, napTime)
startTime
sum(startTime)
napTime <- (totalTime - startTime)
cor(beren4$value[Naps], beren4$age[Naps])
cor.test(beren4$value[Naps], beren4$age[Naps])
cor.test(beren4$start_hour, beren4$totalTime)
cor.test(beren4$value[Naps], beren4$totalTime[Naps])
totalTime <- tapply(sleepTime1, sleepTime2, sum)
totalTime
cor.test(startTime, beren4$totalTime[Naps])
cor.test(startTime, totalTime)
cor(startTime, totalTime)
sleepTime1
totalTime
startTime
startTime
startTime <- (startHour) + startMin/60
startTime
cor(startTime, totalTime)
totalNap <- tapply(totalTime, beren4$age, sum)
sleepTime1 <- (endHour - startHour)*(60) #
sleepTime2 <- (endMin - startMin)
sleepTime1#
sleepTime2
totalTime <- tapply(sleepTime1, sleepTime2, sum)
totalTime
totalNap <- tapply(beren4$totalTime, beren4$age, sum)
beren4
beren4 <- beren3[Naps,]
beren4
startHour <- (beren4$start_hour)#
startMin <- (beren4$start_minute)#
endHour <- (beren4$end_hour)#
endMin <- (beren4$end_minute)
startHour#
startMin#
endHour#
endMin
sleepTime <- ((endHour - startHour)*60) + (endMin - startMin)
beren4
sleepTime
beren4
beren4$sleepTime <- ((endHour - startHour)*60) + (endMin - startMin)
sleepTime
totalTime <- tapply(beren4$sleepTime, beren4$age, sum)
totalTime
par(las=1, mar=c(5,5,1,1), mgp=c(2, 0.5, 0), tck=-0.01)
plot(as.numeric(names(totalTime)), totalTime, type"b", pch=16, xlab="age in days", ylab="nap time in minutes")
totalTime <- tapply(beren4$sleepTime, beren4$age, sum)
totalTime
par(las=1, mar=c(5,5,1,1), mgp=c(2, 0.5, 0), tck=-0.01)
plot(as.numeric(names(totalTime)), totalTime, type"b", pch=16, xlab="age in days", ylab="nap time in minutes")
plot(as.numeric(names(totalTime)), totalTime, type="b", pch=16, xlab="age in days", ylab="nap time in minutes")
startHour <- (beren4$start_hour)#
startMin <- (beren4$start_minute)#
endHour <- (beren4$end_hour)#
endMin <- (beren4$end_minute)
startHour#
startMin#
endHour#
endMin
sleepTime1 <- (endHour - startHour) *(60)
sleepTime2 <- (endMin - startMin)
sleepTime1#
sleetTime2
sleepTime1#
sleepTime2
totalTime <- tapply(sleepTime1, sleepTime2, sum)
totalTime
sum(totalTime)
totalNapTime <- tapplu(totalTime, beren3$age)
totalNapTime <- tapply(totalTime, beren3$age)
totalNapTime <- tapply(totalTime, beren4$age, sum)
totalNapTime <- tapply(totalTime, beren4$age[Naps], sum)
Naps <- which(Data[,'event'] == 'nap')
Naps
beren4 <- beren3[Naps,]
beren4
dayID <- apply(Data, 1, function(x) paste(x[1:3], collapse='-'))#
dateID <- sapply(dayID, as.Date, format = "%Y-%m-%d" , origin = "2019-04-18")#
Data$age <- dateID[which(Data$event == 'birth')]
startHour <- (beren4$start_hour)#
startMin <- (beren4$start_minute)#
endHour <- (beren4$end_hour)#
endMin <- (beren4$end_minute)
startHour#
startMin#
endHour#
endMin#
sleepTime1 <- (endHour - startHour) *(60)#
sleepTime2 <- (endMin - startMin)#
sleepTime1#
sleepTime2
totalTime <- tapply(sleepTime1, sleepTime2, sum)#
totalTime
totalNapTime <- tapply(totalTime, beren4$age[Naps], sum)
Naps <- which(Data[,9] == 'nap')
dayID <- apply(Data, 1, function(x) paste(x[1:3], collapse='-'))#
dateID <- sapply(dayID, as.Date, format = "%Y-%m-%d" , origin = "2019-04-18")#
Data$age <- dateID[which(Data$event == 'birth')]
startHour <- (beren4$start_hour)#
startMin <- (beren4$start_minute)#
endHour <- (beren4$end_hour)#
endMin <- (beren4$end_minute)#
startHour#
startMin#
endHour#
endMin#
sleepTime1 <- (endHour - startHour) *(60)#
sleepTime2 <- (endMin - startMin)#
sleepTime1#
sleepTime2#
totalTime <- tapply(sleepTime1, sleepTime2, sum)#
totalTime
par(las=1, mar=c(5,5,1,1), mgp=c(2, 0.5, 0), tck=-0.01)#
plot(as.numeric(names(totalTime)), totalTime, type="b", pch=16, xlab="age in days", ylab="nap time in minutes")
startTime <- (startHour*60) + startMin
startTime
cor.test(startTime, totalTime)
